{"version":3,"file":"static/js/514.19ec6bff.chunk.js","mappings":"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","sources":["Pages/Cast/StyledCast.js","Pages/Cast/Cast.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  max-width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n`;\nexport const Card = styled.div`\n  --size: 200px;\n  width: var(--size);\n  height: var(--size);\n  background: linear-gradient(\n    -180deg,\n    rgba(255, 255, 255, 0.5) 0%,\n    rgba(0, 0, 0, 0.5) 100%\n  );\n  padding: 2rem 1.5rem;\n  transition: box-shadow 0.3s ease, transform 0.2s ease;\n  &:hover {\n    box-shadow: 0 8px 50px #23232333;\n  }\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  transition: transform 0.2s ease, opacity 0.2s ease;\n`;\n\n/*Image*/\nexport const CardAvatar = styled.div`\n  --size: 100px;\n\n  background-image: ${props => {\n    // console.log(props.img);\n    return `url(${props.img})`;\n  }};\n  background-size: cover;\n  width: var(--size);\n  height: var(--size);\n  border-radius: 50%;\n  transition: transform 0.2s ease;\n  margin-bottom: 1rem;\n`;\n\n/*Card footer*/\n//    .card-social {\n//     transform: translateY(200%);\n//     display: flex;\n//     justify-content: space-around;\n//     width: 100%;\n//     opacity: 0;\n//     transition: transform .2s ease, opacity .2s ease;\n//    }\n\n//    .card-social__item {\n//     list-style: none;\n//    }\n\n//    .card-social__item svg {\n//     display: block;\n//     height: 18px;\n//     width: 18px;\n//     fill: #515F65;\n//     cursor: pointer;\n//     transition: fill 0.2s ease ,transform 0.2s ease;\n//    }\n\n/*Text*/\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\nexport const CardTitle = styled.div`\n  color: ${props => props.theme.themeLight.primary_color};\n  font-size: 1.5em;\n  font-weight: 500;\n  line-height: 2rem;\n`;\n\nexport const CardSubtitle = styled.div`\n  color: ${props => props.theme.themeLight.secondary_color};\n  font-size: 1em;\n  font-weight: 500;\n  line-height: 1rem;\n`;\n/*Hover*/\n//    .card:hover {\n//     box-shadow: 0 8px 50px #23232333;\n//    }\n\n//    .card:hover .card-info {\n//     transform: translateY(-5%);\n//    }\n\n//    .card:hover .card-social {\n//     transform: translateY(100%);\n//     opacity: 1;\n//    }\n\n//    .card-social__item svg:hover {\n//     fill: #232323;\n//     transform: scale(1.1);\n//    }\n\n//    .card-avatar:hover {\n//     transform: scale(1.1);\n//    }\n","import React, { useEffect, useState } from 'react';\nimport { GetData, baseUrlImg } from '../../Services/MoviesAPI';\nimport { useParams } from 'react-router-dom';\n\nimport { nanoid } from 'nanoid';\n\nimport {\n  Card,\n  CardAvatar,\n  CardInfo,\n  CardSubtitle,\n  CardTitle,\n  List,\n  Wrapper,\n} from './StyledCast';\n\nexport default function Cast() {\n  const { id } = useParams();\n  // console.log('id: ', id);\n  //  хук useParams повертає всі обєкт де є всі динамічні параматри\n  // const params = useParams();\n  // const id = params.id;\n  const [cast, setCast] = useState();\n  // console.log('cast: ', cast);\n  useEffect(() => {\n    const GetCast = async () => {\n      try {\n        const resp = await GetData.fetchMovieCasts(id);\n        // console.log('resp : ', resp);\n\n        setCast(resp.cast);\n      } catch (Error) {\n        // setError(Error.message);\n        console.log(Error);\n      }\n    };\n    GetCast();\n  }, [id]);\n  return (\n    <List>\n      {cast?.map(actor => (\n        <li key={nanoid()}>\n          <Card>\n            <CardInfo>\n              <CardAvatar\n                img={`${baseUrlImg}${actor.profile_path} `}\n              ></CardAvatar>\n              <Wrapper>\n                <CardTitle> Name: {actor.name}</CardTitle>\n                <CardSubtitle> character: {actor.character}</CardSubtitle>\n              </Wrapper>\n            </CardInfo>\n            {/* <ul className=\"card-social\">\n            <li className=\"card-social__item\">\n              <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M14 9h3l-.375 3H14v9h-3.89v-9H8V9h2.11V6.984c0-1.312.327-2.304.984-2.976C11.75 3.336 12.844 3 14.375 3H17v3h-1.594c-.594 0-.976.094-1.148.281-.172.188-.258.5-.258.938V9z\"></path>\n              </svg>\n            </li>\n            <li className=\"card-social__item\">\n              <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M20.875 7.5v.563c0 3.28-1.18 6.257-3.54 8.93C14.978 19.663 11.845 21 7.938 21c-2.5 0-4.812-.687-6.937-2.063.5.063.86.094 1.078.094 2.094 0 3.969-.656 5.625-1.968a4.563 4.563 0 0 1-2.625-.915 4.294 4.294 0 0 1-1.594-2.226c.375.062.657.094.844.094.313 0 .719-.063 1.219-.188-1.031-.219-1.899-.742-2.602-1.57a4.32 4.32 0 0 1-1.054-2.883c.687.328 1.375.516 2.062.516C2.61 9.016 1.938 7.75 1.938 6.094c0-.782.203-1.531.609-2.25 2.406 2.969 5.515 4.547 9.328 4.734-.063-.219-.094-.562-.094-1.031 0-1.281.438-2.36 1.313-3.234C13.969 3.437 15.047 3 16.328 3s2.375.484 3.281 1.453c.938-.156 1.907-.531 2.907-1.125-.313 1.094-.985 1.938-2.016 2.531.969-.093 1.844-.328 2.625-.703-.563.875-1.312 1.656-2.25 2.344z\"></path>\n              </svg>\n            </li>\n            <li className=\"card-social__item\">\n              <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M19.547 3c.406 0 .75.133 1.031.398.281.266.422.602.422 1.008v15.047c0 .406-.14.766-.422 1.078a1.335 1.335 0 0 1-1.031.469h-15c-.406 0-.766-.156-1.078-.469C3.156 20.22 3 19.86 3 19.453V4.406c0-.406.148-.742.445-1.008C3.742 3.133 4.11 3 4.547 3h15zM8.578 18V9.984H6V18h2.578zM7.36 8.766c.407 0 .743-.133 1.008-.399a1.31 1.31 0 0 0 .399-.96c0-.407-.125-.743-.375-1.009C8.14 6.133 7.813 6 7.406 6c-.406 0-.742.133-1.008.398C6.133 6.664 6 7 6 7.406c0 .375.125.696.375.961.25.266.578.399.984.399zM18 18v-4.688c0-1.156-.273-2.03-.82-2.624-.547-.594-1.258-.891-2.133-.891-.938 0-1.719.437-2.344 1.312V9.984h-2.578V18h2.578v-4.547c0-.312.031-.531.094-.656.25-.625.687-.938 1.312-.938.875 0 1.313.578 1.313 1.735V18H18z\"></path>\n              </svg>\n            </li>\n          </ul> */}\n          </Card>\n        </li>\n      ))}\n    </List>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Card","_templateObject2","CardInfo","_templateObject3","CardAvatar","_templateObject4","props","concat","img","Wrapper","_templateObject5","CardTitle","_templateObject6","theme","themeLight","primary_color","CardSubtitle","_templateObject7","secondary_color","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Cast","id","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","GetCast","_ref","_asyncToGenerator","_callee","resp","_context","GetData","t0","console","log","apply","arguments","_jsx","children","map","actor","_jsxs","baseUrlImg","profile_path","character","nanoid"],"sourceRoot":""}